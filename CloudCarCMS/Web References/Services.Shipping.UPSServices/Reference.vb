'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18052
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18052.
'
Namespace Services.Shipping.UPSServices
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="UPSServiceSoap", [Namespace]:="http://localhost:10981/Services/")>  _
    Partial Public Class UPSService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetServiceTypeTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPickupTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetCustomerClassificationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RequestServiceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RequestService1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccessInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetFromAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetToAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetShippingItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetShippingItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetShippingRatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetShippingRateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRateFromIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddShippingItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddShippingItem1OperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddShippingItem2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SubmitRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUPSRatesTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CloudCar.My.MySettings.Default.SMECommerceTemplate_Services_Shipping_UPSServices_UPSService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetServiceTypeTableCompleted As GetServiceTypeTableCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPickupTypeCompleted As SetPickupTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event SetCustomerClassificationCompleted As SetCustomerClassificationCompletedEventHandler
        
        '''<remarks/>
        Public Event RequestServiceCompleted As RequestServiceCompletedEventHandler
        
        '''<remarks/>
        Public Event RequestService1Completed As RequestService1CompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccessInfoCompleted As SetAccessInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event SetFromAddressCompleted As SetFromAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event SetToAddressCompleted As SetToAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event GetShippingItemsCompleted As GetShippingItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetShippingItemCompleted As GetShippingItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetShippingRatesCompleted As GetShippingRatesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetShippingRateCompleted As GetShippingRateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRateFromIDCompleted As GetRateFromIDCompletedEventHandler
        
        '''<remarks/>
        Public Event AddShippingItemCompleted As AddShippingItemCompletedEventHandler
        
        '''<remarks/>
        Public Event AddShippingItem1Completed As AddShippingItem1CompletedEventHandler
        
        '''<remarks/>
        Public Event AddShippingItem2Completed As AddShippingItem2CompletedEventHandler
        
        '''<remarks/>
        Public Event SubmitRequestCompleted As SubmitRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUPSRatesTableCompleted As GetUPSRatesTableCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/GetServiceTypeTable", RequestNamespace:="http://localhost:10981/Services/", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetServiceTypeTable() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetServiceTypeTable", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetServiceTypeTableAsync()
            Me.GetServiceTypeTableAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetServiceTypeTableAsync(ByVal userState As Object)
            If (Me.GetServiceTypeTableOperationCompleted Is Nothing) Then
                Me.GetServiceTypeTableOperationCompleted = AddressOf Me.OnGetServiceTypeTableOperationCompleted
            End If
            Me.InvokeAsync("GetServiceTypeTable", New Object(-1) {}, Me.GetServiceTypeTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetServiceTypeTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetServiceTypeTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetServiceTypeTableCompleted(Me, New GetServiceTypeTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/SetPickupType", RequestNamespace:="http://localhost:10981/Services/", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetPickupType(ByVal pt As PickupType)
            Me.Invoke("SetPickupType", New Object() {pt})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPickupTypeAsync(ByVal pt As PickupType)
            Me.SetPickupTypeAsync(pt, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPickupTypeAsync(ByVal pt As PickupType, ByVal userState As Object)
            If (Me.SetPickupTypeOperationCompleted Is Nothing) Then
                Me.SetPickupTypeOperationCompleted = AddressOf Me.OnSetPickupTypeOperationCompleted
            End If
            Me.InvokeAsync("SetPickupType", New Object() {pt}, Me.SetPickupTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPickupTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPickupTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPickupTypeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/SetCustomerClassification", RequestNamespace:="http://localhost:10981/Services/", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetCustomerClassification(ByVal cc As CClassification)
            Me.Invoke("SetCustomerClassification", New Object() {cc})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetCustomerClassificationAsync(ByVal cc As CClassification)
            Me.SetCustomerClassificationAsync(cc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetCustomerClassificationAsync(ByVal cc As CClassification, ByVal userState As Object)
            If (Me.SetCustomerClassificationOperationCompleted Is Nothing) Then
                Me.SetCustomerClassificationOperationCompleted = AddressOf Me.OnSetCustomerClassificationOperationCompleted
            End If
            Me.InvokeAsync("SetCustomerClassification", New Object() {cc}, Me.SetCustomerClassificationOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetCustomerClassificationOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetCustomerClassificationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetCustomerClassificationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/RequestService", RequestNamespace:="http://localhost:10981/Services/", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Sub RequestService(ByVal code As ServiceType)
            Me.Invoke("RequestService", New Object() {code})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RequestServiceAsync(ByVal code As ServiceType)
            Me.RequestServiceAsync(code, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RequestServiceAsync(ByVal code As ServiceType, ByVal userState As Object)
            If (Me.RequestServiceOperationCompleted Is Nothing) Then
                Me.RequestServiceOperationCompleted = AddressOf Me.OnRequestServiceOperationCompleted
            End If
            Me.InvokeAsync("RequestService", New Object() {code}, Me.RequestServiceOperationCompleted, userState)
        End Sub
        
        Private Sub OnRequestServiceOperationCompleted(ByVal arg As Object)
            If (Not (Me.RequestServiceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RequestServiceCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="RequestService1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/RequestServiceString", RequestElementName:="RequestServiceString", RequestNamespace:="http://localhost:10981/Services/", ResponseElementName:="RequestServiceStringResponse", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Sub RequestService(ByVal code As String)
            Me.Invoke("RequestService1", New Object() {code})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RequestService1Async(ByVal code As String)
            Me.RequestService1Async(code, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RequestService1Async(ByVal code As String, ByVal userState As Object)
            If (Me.RequestService1OperationCompleted Is Nothing) Then
                Me.RequestService1OperationCompleted = AddressOf Me.OnRequestService1OperationCompleted
            End If
            Me.InvokeAsync("RequestService1", New Object() {code}, Me.RequestService1OperationCompleted, userState)
        End Sub
        
        Private Sub OnRequestService1OperationCompleted(ByVal arg As Object)
            If (Not (Me.RequestService1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RequestService1Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/SetAccessInfo", RequestNamespace:="http://localhost:10981/Services/", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetAccessInfo(ByVal accesslicensenumber As String, ByVal userid As String, ByVal password As String)
            Me.Invoke("SetAccessInfo", New Object() {accesslicensenumber, userid, password})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccessInfoAsync(ByVal accesslicensenumber As String, ByVal userid As String, ByVal password As String)
            Me.SetAccessInfoAsync(accesslicensenumber, userid, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccessInfoAsync(ByVal accesslicensenumber As String, ByVal userid As String, ByVal password As String, ByVal userState As Object)
            If (Me.SetAccessInfoOperationCompleted Is Nothing) Then
                Me.SetAccessInfoOperationCompleted = AddressOf Me.OnSetAccessInfoOperationCompleted
            End If
            Me.InvokeAsync("SetAccessInfo", New Object() {accesslicensenumber, userid, password}, Me.SetAccessInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccessInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccessInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccessInfoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/FullFromAddress", RequestElementName:="FullFromAddress", RequestNamespace:="http://localhost:10981/Services/", ResponseElementName:="FullFromAddressResponse", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetFromAddress(ByVal city As String, ByVal provorstate As String, ByVal postalcode As String, ByVal country As String, ByVal address1 As String, ByVal address2 As String, ByVal address3 As String, ByVal phonenumber As Long, ByVal companyname As String, ByVal attention As String)
            Me.Invoke("SetFromAddress", New Object() {city, provorstate, postalcode, country, address1, address2, address3, phonenumber, companyname, attention})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetFromAddressAsync(ByVal city As String, ByVal provorstate As String, ByVal postalcode As String, ByVal country As String, ByVal address1 As String, ByVal address2 As String, ByVal address3 As String, ByVal phonenumber As Long, ByVal companyname As String, ByVal attention As String)
            Me.SetFromAddressAsync(city, provorstate, postalcode, country, address1, address2, address3, phonenumber, companyname, attention, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetFromAddressAsync(ByVal city As String, ByVal provorstate As String, ByVal postalcode As String, ByVal country As String, ByVal address1 As String, ByVal address2 As String, ByVal address3 As String, ByVal phonenumber As Long, ByVal companyname As String, ByVal attention As String, ByVal userState As Object)
            If (Me.SetFromAddressOperationCompleted Is Nothing) Then
                Me.SetFromAddressOperationCompleted = AddressOf Me.OnSetFromAddressOperationCompleted
            End If
            Me.InvokeAsync("SetFromAddress", New Object() {city, provorstate, postalcode, country, address1, address2, address3, phonenumber, companyname, attention}, Me.SetFromAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetFromAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetFromAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetFromAddressCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/FullToAddress", RequestElementName:="FullToAddress", RequestNamespace:="http://localhost:10981/Services/", ResponseElementName:="FullToAddressResponse", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetToAddress(ByVal city As String, ByVal provorstate As String, ByVal postalcode As String, ByVal country As String, ByVal address1 As String, ByVal address2 As String, ByVal address3 As String, ByVal phonenumber As Long, ByVal companyname As String, ByVal attention As String)
            Me.Invoke("SetToAddress", New Object() {city, provorstate, postalcode, country, address1, address2, address3, phonenumber, companyname, attention})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetToAddressAsync(ByVal city As String, ByVal provorstate As String, ByVal postalcode As String, ByVal country As String, ByVal address1 As String, ByVal address2 As String, ByVal address3 As String, ByVal phonenumber As Long, ByVal companyname As String, ByVal attention As String)
            Me.SetToAddressAsync(city, provorstate, postalcode, country, address1, address2, address3, phonenumber, companyname, attention, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetToAddressAsync(ByVal city As String, ByVal provorstate As String, ByVal postalcode As String, ByVal country As String, ByVal address1 As String, ByVal address2 As String, ByVal address3 As String, ByVal phonenumber As Long, ByVal companyname As String, ByVal attention As String, ByVal userState As Object)
            If (Me.SetToAddressOperationCompleted Is Nothing) Then
                Me.SetToAddressOperationCompleted = AddressOf Me.OnSetToAddressOperationCompleted
            End If
            Me.InvokeAsync("SetToAddress", New Object() {city, provorstate, postalcode, country, address1, address2, address3, phonenumber, companyname, attention}, Me.SetToAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetToAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetToAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetToAddressCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/GetShippingItems", RequestNamespace:="http://localhost:10981/Services/", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetShippingItems() As PackageProperties()
            Dim results() As Object = Me.Invoke("GetShippingItems", New Object(-1) {})
            Return CType(results(0),PackageProperties())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetShippingItemsAsync()
            Me.GetShippingItemsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetShippingItemsAsync(ByVal userState As Object)
            If (Me.GetShippingItemsOperationCompleted Is Nothing) Then
                Me.GetShippingItemsOperationCompleted = AddressOf Me.OnGetShippingItemsOperationCompleted
            End If
            Me.InvokeAsync("GetShippingItems", New Object(-1) {}, Me.GetShippingItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetShippingItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetShippingItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetShippingItemsCompleted(Me, New GetShippingItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/GetShippingItem", RequestNamespace:="http://localhost:10981/Services/", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetShippingItem(ByVal index As Integer) As UPSPackage
            Dim results() As Object = Me.Invoke("GetShippingItem", New Object() {index})
            Return CType(results(0),UPSPackage)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetShippingItemAsync(ByVal index As Integer)
            Me.GetShippingItemAsync(index, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetShippingItemAsync(ByVal index As Integer, ByVal userState As Object)
            If (Me.GetShippingItemOperationCompleted Is Nothing) Then
                Me.GetShippingItemOperationCompleted = AddressOf Me.OnGetShippingItemOperationCompleted
            End If
            Me.InvokeAsync("GetShippingItem", New Object() {index}, Me.GetShippingItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetShippingItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetShippingItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetShippingItemCompleted(Me, New GetShippingItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/GetShippingRates", RequestNamespace:="http://localhost:10981/Services/", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetShippingRates() As UPSRate()
            Dim results() As Object = Me.Invoke("GetShippingRates", New Object(-1) {})
            Return CType(results(0),UPSRate())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetShippingRatesAsync()
            Me.GetShippingRatesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetShippingRatesAsync(ByVal userState As Object)
            If (Me.GetShippingRatesOperationCompleted Is Nothing) Then
                Me.GetShippingRatesOperationCompleted = AddressOf Me.OnGetShippingRatesOperationCompleted
            End If
            Me.InvokeAsync("GetShippingRates", New Object(-1) {}, Me.GetShippingRatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetShippingRatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetShippingRatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetShippingRatesCompleted(Me, New GetShippingRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/GetShippingRate", RequestNamespace:="http://localhost:10981/Services/", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetShippingRate(ByVal index As Integer) As UPSRate
            Dim results() As Object = Me.Invoke("GetShippingRate", New Object() {index})
            Return CType(results(0),UPSRate)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetShippingRateAsync(ByVal index As Integer)
            Me.GetShippingRateAsync(index, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetShippingRateAsync(ByVal index As Integer, ByVal userState As Object)
            If (Me.GetShippingRateOperationCompleted Is Nothing) Then
                Me.GetShippingRateOperationCompleted = AddressOf Me.OnGetShippingRateOperationCompleted
            End If
            Me.InvokeAsync("GetShippingRate", New Object() {index}, Me.GetShippingRateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetShippingRateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetShippingRateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetShippingRateCompleted(Me, New GetShippingRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/GetRateFromID", RequestNamespace:="http://localhost:10981/Services/", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRateFromID(ByVal id As String) As UPSRate
            Dim results() As Object = Me.Invoke("GetRateFromID", New Object() {id})
            Return CType(results(0),UPSRate)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRateFromIDAsync(ByVal id As String)
            Me.GetRateFromIDAsync(id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRateFromIDAsync(ByVal id As String, ByVal userState As Object)
            If (Me.GetRateFromIDOperationCompleted Is Nothing) Then
                Me.GetRateFromIDOperationCompleted = AddressOf Me.OnGetRateFromIDOperationCompleted
            End If
            Me.InvokeAsync("GetRateFromID", New Object() {id}, Me.GetRateFromIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRateFromIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRateFromIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRateFromIDCompleted(Me, New GetRateFromIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/AddShippingItemPackaged", RequestElementName:="AddShippingItemPackaged", RequestNamespace:="http://localhost:10981/Services/", ResponseElementName:="AddShippingItemPackagedResponse", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function AddShippingItem(ByVal packagingtype As PackagingMethod, ByVal weightunit As WeightUnit, ByVal weight As Double, ByVal dimensionunit As DimensionUnit, ByVal length As Double, ByVal width As Double, ByVal height As Double) As <System.Xml.Serialization.XmlElementAttribute("AddShippingItemPackagedResult")> Integer
            Dim results() As Object = Me.Invoke("AddShippingItem", New Object() {packagingtype, weightunit, weight, dimensionunit, length, width, height})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddShippingItemAsync(ByVal packagingtype As PackagingMethod, ByVal weightunit As WeightUnit, ByVal weight As Double, ByVal dimensionunit As DimensionUnit, ByVal length As Double, ByVal width As Double, ByVal height As Double)
            Me.AddShippingItemAsync(packagingtype, weightunit, weight, dimensionunit, length, width, height, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddShippingItemAsync(ByVal packagingtype As PackagingMethod, ByVal weightunit As WeightUnit, ByVal weight As Double, ByVal dimensionunit As DimensionUnit, ByVal length As Double, ByVal width As Double, ByVal height As Double, ByVal userState As Object)
            If (Me.AddShippingItemOperationCompleted Is Nothing) Then
                Me.AddShippingItemOperationCompleted = AddressOf Me.OnAddShippingItemOperationCompleted
            End If
            Me.InvokeAsync("AddShippingItem", New Object() {packagingtype, weightunit, weight, dimensionunit, length, width, height}, Me.AddShippingItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddShippingItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddShippingItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddShippingItemCompleted(Me, New AddShippingItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="AddShippingItem1"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/AddShippingItemPackageUnknown", RequestElementName:="AddShippingItemPackageUnknown", RequestNamespace:="http://localhost:10981/Services/", ResponseElementName:="AddShippingItemPackageUnknownResponse", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function AddShippingItem(ByVal weightunit As WeightUnit, ByVal weight As Double, ByVal dimensionunit As DimensionUnit, ByVal length As Double, ByVal width As Double, ByVal height As Double) As <System.Xml.Serialization.XmlElementAttribute("AddShippingItemPackageUnknownResult")> Integer
            Dim results() As Object = Me.Invoke("AddShippingItem1", New Object() {weightunit, weight, dimensionunit, length, width, height})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddShippingItem1Async(ByVal weightunit As WeightUnit, ByVal weight As Double, ByVal dimensionunit As DimensionUnit, ByVal length As Double, ByVal width As Double, ByVal height As Double)
            Me.AddShippingItem1Async(weightunit, weight, dimensionunit, length, width, height, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddShippingItem1Async(ByVal weightunit As WeightUnit, ByVal weight As Double, ByVal dimensionunit As DimensionUnit, ByVal length As Double, ByVal width As Double, ByVal height As Double, ByVal userState As Object)
            If (Me.AddShippingItem1OperationCompleted Is Nothing) Then
                Me.AddShippingItem1OperationCompleted = AddressOf Me.OnAddShippingItem1OperationCompleted
            End If
            Me.InvokeAsync("AddShippingItem1", New Object() {weightunit, weight, dimensionunit, length, width, height}, Me.AddShippingItem1OperationCompleted, userState)
        End Sub
        
        Private Sub OnAddShippingItem1OperationCompleted(ByVal arg As Object)
            If (Not (Me.AddShippingItem1CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddShippingItem1Completed(Me, New AddShippingItem1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.WebMethodAttribute(MessageName:="AddShippingItem2"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/AddShippingItemQuantity", RequestElementName:="AddShippingItemQuantity", RequestNamespace:="http://localhost:10981/Services/", ResponseElementName:="AddShippingItemQuantityResponse", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Overloads Function AddShippingItem(ByVal quantity As Integer, ByVal packagingtype As PackagingMethod, ByVal weightunit As WeightUnit, ByVal weight As Double, ByVal dimensionunit As DimensionUnit, ByVal length As Double, ByVal width As Double, ByVal height As Double) As <System.Xml.Serialization.XmlElementAttribute("AddShippingItemQuantityResult")> Integer
            Dim results() As Object = Me.Invoke("AddShippingItem2", New Object() {quantity, packagingtype, weightunit, weight, dimensionunit, length, width, height})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddShippingItem2Async(ByVal quantity As Integer, ByVal packagingtype As PackagingMethod, ByVal weightunit As WeightUnit, ByVal weight As Double, ByVal dimensionunit As DimensionUnit, ByVal length As Double, ByVal width As Double, ByVal height As Double)
            Me.AddShippingItem2Async(quantity, packagingtype, weightunit, weight, dimensionunit, length, width, height, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddShippingItem2Async(ByVal quantity As Integer, ByVal packagingtype As PackagingMethod, ByVal weightunit As WeightUnit, ByVal weight As Double, ByVal dimensionunit As DimensionUnit, ByVal length As Double, ByVal width As Double, ByVal height As Double, ByVal userState As Object)
            If (Me.AddShippingItem2OperationCompleted Is Nothing) Then
                Me.AddShippingItem2OperationCompleted = AddressOf Me.OnAddShippingItem2OperationCompleted
            End If
            Me.InvokeAsync("AddShippingItem2", New Object() {quantity, packagingtype, weightunit, weight, dimensionunit, length, width, height}, Me.AddShippingItem2OperationCompleted, userState)
        End Sub
        
        Private Sub OnAddShippingItem2OperationCompleted(ByVal arg As Object)
            If (Not (Me.AddShippingItem2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddShippingItem2Completed(Me, New AddShippingItem2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/SubmitRequest", RequestNamespace:="http://localhost:10981/Services/", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SubmitRequest() As String
            Dim results() As Object = Me.Invoke("SubmitRequest", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SubmitRequestAsync()
            Me.SubmitRequestAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SubmitRequestAsync(ByVal userState As Object)
            If (Me.SubmitRequestOperationCompleted Is Nothing) Then
                Me.SubmitRequestOperationCompleted = AddressOf Me.OnSubmitRequestOperationCompleted
            End If
            Me.InvokeAsync("SubmitRequest", New Object(-1) {}, Me.SubmitRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnSubmitRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.SubmitRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SubmitRequestCompleted(Me, New SubmitRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost:10981/Services/GetUPSRatesTable", RequestNamespace:="http://localhost:10981/Services/", ResponseNamespace:="http://localhost:10981/Services/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUPSRatesTable() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetUPSRatesTable", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUPSRatesTableAsync()
            Me.GetUPSRatesTableAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUPSRatesTableAsync(ByVal userState As Object)
            If (Me.GetUPSRatesTableOperationCompleted Is Nothing) Then
                Me.GetUPSRatesTableOperationCompleted = AddressOf Me.OnGetUPSRatesTableOperationCompleted
            End If
            Me.InvokeAsync("GetUPSRatesTable", New Object(-1) {}, Me.GetUPSRatesTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUPSRatesTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUPSRatesTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUPSRatesTableCompleted(Me, New GetUPSRatesTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://localhost:10981/Services/")>  _
    Public Enum PickupType
        
        '''<remarks/>
        DailyPickup
        
        '''<remarks/>
        CustomerCounter
        
        '''<remarks/>
        OneTimePickup
        
        '''<remarks/>
        OnCallAir
        
        '''<remarks/>
        SuggestedRetailRates
        
        '''<remarks/>
        LetterCounter
        
        '''<remarks/>
        AirServiceCenter
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://localhost:10981/Services/")>  _
    Public Enum CClassification
        
        '''<remarks/>
        Wholesale
        
        '''<remarks/>
        Occasional
        
        '''<remarks/>
        Retail
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://localhost:10981/Services/")>  _
    Public Enum ServiceType
        
        '''<remarks/>
        Shop
        
        '''<remarks/>
        UPSNextDayAir
        
        '''<remarks/>
        UPSSecondDayAir
        
        '''<remarks/>
        UPSGround
        
        '''<remarks/>
        UPSWorldwideExpress
        
        '''<remarks/>
        UPSWorldwideExpedited
        
        '''<remarks/>
        UPSStandard
        
        '''<remarks/>
        UPSThreeDaySelect
        
        '''<remarks/>
        UPSNextDayAirSaver
        
        '''<remarks/>
        UPSNextDayAirEarlyAM
        
        '''<remarks/>
        UPSWorldwideExpressPlus
        
        '''<remarks/>
        UPSSecondDayAirAM
        
        '''<remarks/>
        UPSSaver
        
        '''<remarks/>
        UPSTodayStandard
        
        '''<remarks/>
        UPSTodayDedicatedCourrier
        
        '''<remarks/>
        UPSTodayIntercity
        
        '''<remarks/>
        UPSTodayExpress
        
        '''<remarks/>
        UPSTodayExpressSaver
        
        '''<remarks/>
        TradeDirectCrossBorder
        
        '''<remarks/>
        TradeDirectAir
        
        '''<remarks/>
        TradeDirectOcean
        
        '''<remarks/>
        UPSFreightLTL
        
        '''<remarks/>
        UPSFreightLTLGuaranteed
        
        '''<remarks/>
        UPSFreightLTLUrgent
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://localhost:10981/Services/")>  _
    Partial Public Class PackageProperties
        
        Private weightField As Double
        
        Private lengthField As Double
        
        Private widthField As Double
        
        Private heightField As Double
        
        Private weightUnitField As WeightUnit
        
        Private dimensionUnitField As DimensionUnit
        
        '''<remarks/>
        Public Property Weight() As Double
            Get
                Return Me.weightField
            End Get
            Set
                Me.weightField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Length() As Double
            Get
                Return Me.lengthField
            End Get
            Set
                Me.lengthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Width() As Double
            Get
                Return Me.widthField
            End Get
            Set
                Me.widthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Height() As Double
            Get
                Return Me.heightField
            End Get
            Set
                Me.heightField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WeightUnit() As WeightUnit
            Get
                Return Me.weightUnitField
            End Get
            Set
                Me.weightUnitField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DimensionUnit() As DimensionUnit
            Get
                Return Me.dimensionUnitField
            End Get
            Set
                Me.dimensionUnitField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://localhost:10981/Services/")>  _
    Public Enum WeightUnit
        
        '''<remarks/>
        LBS
        
        '''<remarks/>
        KGS
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://localhost:10981/Services/")>  _
    Public Enum DimensionUnit
        
        '''<remarks/>
        Inches
        
        '''<remarks/>
        Centimeters
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://localhost:10981/Services/")>  _
    Partial Public Class UPSRate
        
        Private serviceCodeField As String
        
        Private serviceField As String
        
        Private warningField As String
        
        Private billingWeightField As String
        
        Private billingWeightUnitField As String
        
        Private currencyField As String
        
        Private transportationCostField As Double
        
        Private serviceOptionsCostField As Double
        
        Private totalCostField As Double
        
        Private gauranteedDaysToDeliveryField As String
        
        Private scheduledDeliveryTimeField As String
        
        '''<remarks/>
        Public Property ServiceCode() As String
            Get
                Return Me.serviceCodeField
            End Get
            Set
                Me.serviceCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Service() As String
            Get
                Return Me.serviceField
            End Get
            Set
                Me.serviceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Warning() As String
            Get
                Return Me.warningField
            End Get
            Set
                Me.warningField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BillingWeight() As String
            Get
                Return Me.billingWeightField
            End Get
            Set
                Me.billingWeightField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BillingWeightUnit() As String
            Get
                Return Me.billingWeightUnitField
            End Get
            Set
                Me.billingWeightUnitField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Currency() As String
            Get
                Return Me.currencyField
            End Get
            Set
                Me.currencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransportationCost() As Double
            Get
                Return Me.transportationCostField
            End Get
            Set
                Me.transportationCostField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ServiceOptionsCost() As Double
            Get
                Return Me.serviceOptionsCostField
            End Get
            Set
                Me.serviceOptionsCostField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalCost() As Double
            Get
                Return Me.totalCostField
            End Get
            Set
                Me.totalCostField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property GauranteedDaysToDelivery() As String
            Get
                Return Me.gauranteedDaysToDeliveryField
            End Get
            Set
                Me.gauranteedDaysToDeliveryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ScheduledDeliveryTime() As String
            Get
                Return Me.scheduledDeliveryTimeField
            End Get
            Set
                Me.scheduledDeliveryTimeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://localhost:10981/Services/")>  _
    Partial Public Class PackagingType
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://localhost:10981/Services/")>  _
    Partial Public Class UPSPackage
        
        Private packagingTypeField As PackagingType
        
        Private packagePropertiesField As PackageProperties
        
        Private additionalHandlingField As Boolean
        
        '''<remarks/>
        Public Property PackagingType() As PackagingType
            Get
                Return Me.packagingTypeField
            End Get
            Set
                Me.packagingTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageProperties() As PackageProperties
            Get
                Return Me.packagePropertiesField
            End Get
            Set
                Me.packagePropertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AdditionalHandling() As Boolean
            Get
                Return Me.additionalHandlingField
            End Get
            Set
                Me.additionalHandlingField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://localhost:10981/Services/")>  _
    Public Enum PackagingMethod
        
        '''<remarks/>
        Unknown
        
        '''<remarks/>
        UPSLetter
        
        '''<remarks/>
        CustomerSuppliedPackage
        
        '''<remarks/>
        Tube
        
        '''<remarks/>
        PAK
        
        '''<remarks/>
        UPSExpressBox
        
        '''<remarks/>
        UPSSmallExpressBox
        
        '''<remarks/>
        UPSMediumExpressBox
        
        '''<remarks/>
        UPSLargeExpressBox
        
        '''<remarks/>
        UPS25KGBox
        
        '''<remarks/>
        UPS10KGBox
        
        '''<remarks/>
        Pallet
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetServiceTypeTableCompletedEventHandler(ByVal sender As Object, ByVal e As GetServiceTypeTableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetServiceTypeTableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetPickupTypeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetCustomerClassificationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RequestServiceCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RequestService1CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetAccessInfoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetFromAddressCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetToAddressCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetShippingItemsCompletedEventHandler(ByVal sender As Object, ByVal e As GetShippingItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetShippingItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PackageProperties()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PackageProperties())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetShippingItemCompletedEventHandler(ByVal sender As Object, ByVal e As GetShippingItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetShippingItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UPSPackage
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UPSPackage)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetShippingRatesCompletedEventHandler(ByVal sender As Object, ByVal e As GetShippingRatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetShippingRatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UPSRate()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UPSRate())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetShippingRateCompletedEventHandler(ByVal sender As Object, ByVal e As GetShippingRateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetShippingRateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UPSRate
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UPSRate)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetRateFromIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetRateFromIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRateFromIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UPSRate
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UPSRate)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddShippingItemCompletedEventHandler(ByVal sender As Object, ByVal e As AddShippingItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddShippingItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddShippingItem1CompletedEventHandler(ByVal sender As Object, ByVal e As AddShippingItem1CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddShippingItem1CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddShippingItem2CompletedEventHandler(ByVal sender As Object, ByVal e As AddShippingItem2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddShippingItem2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SubmitRequestCompletedEventHandler(ByVal sender As Object, ByVal e As SubmitRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SubmitRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUPSRatesTableCompletedEventHandler(ByVal sender As Object, ByVal e As GetUPSRatesTableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUPSRatesTableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
End Namespace
